indexing
	description: "Storable logging event. Memento of an event that does not retain the logger reference."
	project: "Project Goanna <http://sourceforge.net/projects/goanna>"
	library: "log4e"
	date: "$Date$"
	revision: "$Revision$"
	author: "Glenn Maughan <glennmaughan@goanna.info>"
	copyright: "Copyright (c) 2001 Glenn Maughan"
	license: "Eiffel Forum License v1 (see forum.txt)."
	
class L4E_STORABLE_EVENT

creation
	
	make
	
feature -- Initialisation
	
	make (event: L4E_EVENT) is
			-- Create a new storable logging event for the 
			-- specified event.
			-- Remember to set the formatted message before
			-- sending across the wire.
		require
			event_not_void: event /= Void
		do
			logger_name := event.logger.name
			priority := event.priority.level_str
			message := event.message.out
			time_stamp := event.time_stamp.out
		end
	
feature -- Status Report
	
	logger_name: STRING
			-- The logger name
	
	priority: STRING
			-- The logging priority level for this event.
	
	message: STRING
			-- String representation of message object
	
	formatted_message: STRING
			-- Formatted message
			
	time_stamp: STRING
			-- String representation of time stamp
	
feature -- Status Setting

	set_formatted_message (formatted: STRING) is
			-- Set the formatted message. Should be generated by 
			-- calling 'layout.format (event))' in the appender.
		require
			formatted_not_void: formatted /= Void
		do
			formatted_message := formatted
		end
		
end -- class L4E_STORABLE_EVENT

