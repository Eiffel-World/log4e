system

	nteventlog

root

	NT_EVENT_LOG

creation

	make

cluster

	[root_cluster "$LOG4E/examples/nteventlog"] end
	[Kernel "$VE_Lib/Kernel"] end
	[Pool "$VE_Lib/Misc/Pool"] end
	[gArgs "$VE_Lib/Tools/gArgs"] end
	[TimeDate "$VE_Lib/TimeDate"] end
	[l4e_log4e "$LOG4E/library"] end
	[l4e_appenders "$LOG4E/library/appenders"] end
	[l4e_nt "$LOG4E/library/appenders/nt"] end
	[l4e_config "$LOG4E/library/config"] end
	[l4e_filters "$LOG4E/library/filters"] end
	[l4e_helpers "$LOG4E/library/helpers"] end
	[l4e_layouts "$LOG4E/library/layouts"] end
	[l4e_pattern "$LOG4E/library/layouts/pattern"] end
	[kl_basic "$GOBO/library/kernel/basic"] end
	[kl_elks "$GOBO/library/kernel/elks"] end
	[kl_io "$GOBO/library/kernel/io"] end
	[kl_misc "$GOBO/library/kernel/misc"] end
	[kl_unicode "$GOBO/library/kernel/unicode"] end
	[kl_support "$GOBO/library/kernel/support"] end
	[kl_spec_ve "$GOBO/library/kernel/spec/ve"] end
	[lx_automaton "$GOBO/library/lexical/automaton"] end
	[lx_error "$GOBO/library/lexical/error"] end
	[lx_generation "$GOBO/library/lexical/generation"] end
	[lx_lex "$GOBO/library/lexical/lex"] end
	[lx_regexp "$GOBO/library/lexical/regexp"] end
	[lx_scanner "$GOBO/library/lexical/scanner"] end
	[lx_skeleton "$GOBO/library/lexical/skeleton"] end
	[lx_support "$GOBO/library/lexical/support"] end
	[pr_error "$GOBO/library/parse/error"] end
	[pr_fsm "$GOBO/library/parse/fsm"] end
	[pr_generation "$GOBO/library/parse/generation"] end
	[pr_grammar "$GOBO/library/parse/grammar"] end
	[pr_parser "$GOBO/library/parse/parser"] end
	[pr_skeleton "$GOBO/library/parse/skeleton"] end
	[pr_support "$GOBO/library/parse/support"] end
	[pr_yacc "$GOBO/library/parse/yacc"] end
	[dp_command "$GOBO/library/pattern/command"] end
	[dp_bridge "$GOBO/library/pattern/bridge"] end
	[rx_interface "$GOBO/library/regexp/interface"] end
	[rx_pcre "$GOBO/library/regexp/pcre"] end
	[rx_support "$GOBO/library/regexp/support"] end
	[ds_container "$GOBO/library/structure/container"] end
	[ds_dispenser "$GOBO/library/structure/dispenser"] end
	[ds_list "$GOBO/library/structure/list"] end
	[ds_set "$GOBO/library/structure/set"] end
	[ds_sort "$GOBO/library/structure/sort"] end
	[ds_support "$GOBO/library/structure/support"] end
	[ds_table "$GOBO/library/structure/table"] end
	[ts_generation "$GOBO/library/test/generation"] end
	[ts_harness "$GOBO/library/test/harness"] end
	[dt_clock "$GOBO/library/time/clock"] end
	[dt_date "$GOBO/library/time/date"] end
	[dt_time_zone "$GOBO/library/time/time_zone"] end
	[et_eiffel_assertion "$GOBO/library/tools/eiffel/ast/assertion"] end
	[et_eiffel_class "$GOBO/library/tools/eiffel/ast/class"] end
	[et_eiffel_constant "$GOBO/library/tools/eiffel/ast/constant"] end
	[et_eiffel_expression "$GOBO/library/tools/eiffel/ast/expression"] end
	[et_eiffel_feature "$GOBO/library/tools/eiffel/ast/feature"] end
	[et_eiffel_instruction "$GOBO/library/tools/eiffel/ast/instruction"] end
	[et_eiffel_lace "$GOBO/library/tools/eiffel/ast/lace"] end
	[et_eiffel_misc "$GOBO/library/tools/eiffel/ast/misc"] end
	[et_eiffel_name "$GOBO/library/tools/eiffel/ast/name"] end
	[et_eiffel_type "$GOBO/library/tools/eiffel/ast/type"] end
	[et_eiffel_error "$GOBO/library/tools/eiffel/error"] end
	[et_eiffel_parser "$GOBO/library/tools/eiffel/parser"] end
	[et_lace_ast "$GOBO/library/tools/lace/ast"] end
	[et_lace_error "$GOBO/library/tools/lace/error"] end
	[et_lace_parser "$GOBO/library/tools/lace/parser"] end
	[et_xace_ast "$GOBO/library/tools/xace/ast"] end
	[et_xace_error "$GOBO/library/tools/xace/error"] end
	[et_xace_generator "$GOBO/library/tools/xace/generator"] end
	[et_xace_parser "$GOBO/library/tools/xace/parser"] end
	[et_xace_support "$GOBO/library/tools/xace/support"] end
	[ut_error "$GOBO/library/utility/error"] end
	[ut_formatter "$GOBO/library/utility/formatter"] end
	[ut_command "$GOBO/library/utility/command"] end
	[ut_support "$GOBO/library/utility/support"] end
	[xm_position "$GOBO/library/xml/position"] end
	[xm_source "$GOBO/library/xml/source"] end
	[xm_general "$GOBO/library/xml/general"] end
	[xm_event "$GOBO/library/xml/event"] end
	[xm_tree "$GOBO/library/xml/tree"] end
	[xm_formatter "$GOBO/library/xml/formatter"] end
	[xm_interface "$GOBO/library/xml/parser/interface"] end
	[xm_eiffel "$GOBO/library/xml/parser/eiffel"] end
	[xm_no_expat "$GOBO/library/xml/parser/no_expat"] end

option

	assertions off
	require off
	ensure off
	class invariant off
	loop invariant off
	loop variant off
	check off
	optimize dead_code on
	optimize calls on
	optimize dyn_type on
	debug instructions off
	debug off
	run_time_in_dll off
	finalize on
	optimize flat_fst off
	FST_expansion_factor 2
	optimize FST off
	optimize inline off
	optimize constants off
	optimize once off
	optimize jumps off
	optimize layout off
	optimize leaves off
	linker default
	map off
	no_default_lib off
	optimize reloads off
	target exe console

end
