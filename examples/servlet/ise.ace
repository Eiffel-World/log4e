system

	log4e_servlet

root

	SERVLET_SERVER: "make"

default

	address_expression (no)
	array_optimization (no)
	assertion (no)
	check_vape (yes)
	cls_compliant (yes)
	console_application (yes)
	dead_code_removal (yes)
	debug (no)
	dotnet_naming_convention (no)
	dynamic_runtime (no)
	exception_trace (no)
	il_verifiable (yes)
	inlining (no)
	inlining_size ("4")
	line_generation (no)
	msil_generation (no)
	multithreaded (no)
	profile (no)
	msil_generation_type ("exe")
	trace (no)

cluster

	root_cluster: "${LOG4E}/examples/servlet"
	ise: "${ISE_EIFFEL}/library"
	base (ise): "$/base"
	kernel (base): "$/kernel"
	kernel_classic (kernel): "$/classic"
	support (base): "$/support"
	support_classic (support): "$/classic"
	structures (base): "$/structures"
	access (structures): "$/access"
	cursors (structures): "$/cursors"
	cursor_tree (structures): "$/cursor_tree"
	dispenser (structures): "$/dispenser"
	iteration (structures): "$/iteration"
	list (structures): "$/list"
	set (structures): "$/set"
	strategies (set): "$/strategies"
	sort (structures): "$/sort"
	storage (structures): "$/storage"
	table (structures): "$/table"
	traversing (structures): "$/traversing"
	tree (structures): "$/tree"
	l4e_log4e: "${LOG4E}/library"
	l4e_appenders (l4e_log4e): "$/appenders"
	l4e_net (l4e_appenders): "$/net"
	l4e_nt (l4e_appenders): "$/nt"
	l4e_config (l4e_log4e): "$/config"
	l4e_filters (l4e_log4e): "$/filters"
	l4e_helpers (l4e_log4e): "$/helpers"
	l4e_layouts (l4e_log4e): "$/layouts"
	l4e_pattern (l4e_layouts): "$/pattern"
	ys_yaesockets: "${YAESOCKETS}"
	ys_spec (ys_yaesockets): "$/spec"
	ys_ise (ys_spec): "$/ise"
	kl_kernel: "${GOBO}/library/kernel"
	kl_basic (kl_kernel): "$/basic"
	kl_elks (kl_kernel): "$/elks"
	kl_io (kl_kernel): "$/io"
	kl_misc (kl_kernel): "$/misc"
	kl_unicode (kl_kernel): "$/unicode"
	kl_support (kl_kernel): "$/support"
	kl_spec (kl_kernel): "$/spec"
	kl_spec_ise (kl_spec): "$/ise"
	lx_lexical: "${GOBO}/library/lexical"
	lx_automaton (lx_lexical): "$/automaton"
	lx_error (lx_lexical): "$/error"
	lx_generation (lx_lexical): "$/generation"
	lx_lex (lx_lexical): "$/lex"
	lx_regexp (lx_lexical): "$/regexp"
	lx_scanner (lx_lexical): "$/scanner"
	lx_skeleton (lx_lexical): "$/skeleton"
	lx_support (lx_lexical): "$/support"
	pr_parse: "${GOBO}/library/parse"
	pr_error (pr_parse): "$/error"
	pr_fsm (pr_parse): "$/fsm"
	pr_generation (pr_parse): "$/generation"
	pr_grammar (pr_parse): "$/grammar"
	pr_parser (pr_parse): "$/parser"
	pr_skeleton (pr_parse): "$/skeleton"
	pr_support (pr_parse): "$/support"
	pr_yacc (pr_parse): "$/yacc"
	dp_pattern: "${GOBO}/library/pattern"
	dp_command (dp_pattern): "$/command"
	dp_bridge (dp_pattern): "$/bridge"
	rx_regexp: "${GOBO}/library/regexp"
	rx_interface (rx_regexp): "$/interface"
	rx_pcre (rx_regexp): "$/pcre"
	rx_support (rx_regexp): "$/support"
	ds_structure: "${GOBO}/library/structure"
	ds_container (ds_structure): "$/container"
	ds_dispenser (ds_structure): "$/dispenser"
	ds_list (ds_structure): "$/list"
	ds_set (ds_structure): "$/set"
	ds_sort (ds_structure): "$/sort"
	ds_support (ds_structure): "$/support"
	ds_table (ds_structure): "$/table"
	ts_test: "${GOBO}/library/test"
	ts_generation (ts_test): "$/generation"
	ts_harness (ts_test): "$/harness"
	dt_time: "${GOBO}/library/time"
	dt_clock (dt_time): "$/clock"
	dt_date (dt_time): "$/date"
	dt_time_zone (dt_time): "$/time_zone"
	et_tools: "${GOBO}/library/tools"
	et_eiffel_eiffel (et_tools): "$/eiffel"
	et_eiffel_ast (et_eiffel_eiffel): "$/ast"
	et_eiffel_assertion (et_eiffel_ast): "$/assertion"
	et_eiffel_class (et_eiffel_ast): "$/class"
	et_eiffel_constant (et_eiffel_ast): "$/constant"
	et_eiffel_expression (et_eiffel_ast): "$/expression"
	et_eiffel_feature (et_eiffel_ast): "$/feature"
	et_eiffel_instruction (et_eiffel_ast): "$/instruction"
	et_eiffel_lace (et_eiffel_ast): "$/lace"
	et_eiffel_misc (et_eiffel_ast): "$/misc"
	et_eiffel_name (et_eiffel_ast): "$/name"
	et_eiffel_type (et_eiffel_ast): "$/type"
	et_eiffel_error (et_eiffel_eiffel): "$/error"
	et_eiffel_parser (et_eiffel_eiffel): "$/parser"
	et_lace_lace (et_tools): "$/lace"
	et_lace_ast (et_lace_lace): "$/ast"
	et_lace_error (et_lace_lace): "$/error"
	et_lace_parser (et_lace_lace): "$/parser"
	et_xace_xace (et_tools): "$/xace"
	et_xace_ast (et_xace_xace): "$/ast"
	et_xace_error (et_xace_xace): "$/error"
	et_xace_generator (et_xace_xace): "$/generator"
	et_xace_parser (et_xace_xace): "$/parser"
	et_xace_support (et_xace_xace): "$/support"
	ut_utility: "${GOBO}/library/utility"
	ut_error (ut_utility): "$/error"
	ut_formatter (ut_utility): "$/formatter"
	ut_command (ut_utility): "$/command"
	ut_support (ut_utility): "$/support"
	xm_xml: "${GOBO}/library/xml"
	xm_position (xm_xml): "$/position"
	xm_source (xm_xml): "$/source"
	xm_general (xm_xml): "$/general"
	xm_event (xm_xml): "$/event"
	xm_tree (xm_xml): "$/tree"
	xm_formatter (xm_xml): "$/formatter"
	xm_parser (xm_xml): "$/parser"
	xm_interface (xm_parser): "$/interface"
	xm_eiffel (xm_parser): "$/eiffel"
	xm_no_expat (xm_parser): "$/no_expat"
	g_ws_webservices: "${GOANNA}/library/webservices"
	g_ws_application (g_ws_webservices): "$/application"
	g_ws_connectors (g_ws_webservices): "$/connectors"
	g_ws_cgi (g_ws_connectors): "$/cgi"
	g_ws_fast_cgi (g_ws_connectors): "$/fast_cgi"
	g_ws_stand_alone (g_ws_connectors): "$/stand_alone"
	g_ws_security (g_ws_webservices): "$/security"
	g_ws_services (g_ws_webservices): "$/services"
	g_ws_servlet (g_ws_webservices): "$/servlet"
	g_ws_http (g_ws_servlet): "$/http"
	g_ws_servlets (g_ws_servlet): "$/servlets"
	g_ws_content_handlers (g_ws_servlets): "$/content_handlers"
	g_ws_models (g_ws_webservices): "$/models"
	g_ws_dom (g_ws_models): "$/dom"
	g_ws_core (g_ws_dom): "$/core"
	g_ws_traversal_range (g_ws_dom): "$/traversal_range"
	g_ws_writer (g_ws_dom): "$/writer"
	g_ws_parser (g_ws_dom): "$/parser"
	g_ws_impl (g_ws_dom): "$/impl"
	g_ws_impl_core (g_ws_impl): "$/core"
	g_ws_impl_traversal_range (g_ws_impl): "$/traversal_range"
	g_ws_xmle_doc (g_ws_impl): "$/xmle_doc"
	g_ws_protocols (g_ws_webservices): "$/protocols"
	g_ws_soap (g_ws_protocols): "$/soap"
	g_ws_encoding (g_ws_soap): "$/encoding"
	g_ws_soap_server (g_ws_soap): "$/server"
	g_ws_soap_servlet (g_ws_soap_server): "$/servlet"
	g_ws_utility (g_ws_soap): "$/utility"
	g_ws_xmlrpc (g_ws_protocols): "$/xmlrpc"
	g_ws_client (g_ws_xmlrpc): "$/client"
	g_ws_xmlrpc_server (g_ws_xmlrpc): "$/server"
	g_ws_xmlrpc_servlet (g_ws_xmlrpc_server): "$/servlet"
	g_ut_utility: "${GOANNA}/library/utility"
	g_ut_spec (g_ut_utility): "$/spec"
	g_ut_ise (g_ut_spec): "$/ise"
	g_ut_codegen (g_ut_utility): "$/codegen"
	g_ut_socketstreams (g_ut_utility): "$/socketstreams"
	g_ut_thread (g_ut_utility): "$/thread"

external

	include_path:
		"$(LOG4E)/library/appenders/nt/lib";

	object:
		"$(YAESOCKETS)/C/cl.obj",
		"WSOCK32.lib";

end
